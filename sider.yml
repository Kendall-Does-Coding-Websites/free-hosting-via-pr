# This is a configuration file to customize code analysis by Sider.
#
# For more information, see the documentation:
# https://help.sider.review/getting-started/custom-configuration

# Customize each tool. If analyses fail, try adjusting each option referencing the following example.
linter:

#   # Brakeman example. See https://help.sider.review/tools/ruby/brakeman
#   brakeman:
#     root_dir: project/
#     dependencies:
#       - { name: "brakeman", version: "5.0.0" }

#   # Checkstyle example. See https://help.sider.review/tools/java/checkstyle
#   checkstyle:
#     root_dir: project/
#     dependencies:
#       - "my.company.com:checkstyle-rules:1.0.0"
#     config: custom-checkstyle.xml
#     target: src/
#     exclude: vendor/
#     ignore: [warning, info]
#     properties: custom-checkstyle.properties

#   # Clang-Tidy example. See https://help.sider.review/tools/cplusplus/clang-tidy
#   clang_tidy:
#     root_dir: project/
#     dependencies:
#       - libgdbm-dev
#       - libfastjson-dev=0.99.8-2
#     include-path:
#       - myinclude
#       - foo/include
#       - /usr/include/libfastjson

#   # PHP_CodeSniffer example. See https://help.sider.review/tools/php/code-sniffer
#   code_sniffer:
#     root_dir: project/
#     target: [app/, test/]
#     standard: [CakePHP, custom-ruleset.xml]
#     extensions: [php, inc]
#     encoding: utf-8
#     ignore:
#       - app/vendor/
#     parallel: true

#   # Cppcheck example. See https://help.sider.review/tools/cplusplus/cppcheck
#   cppcheck:
#     root_dir: project/
#     include-path:
#       - include/
#     target: src/
#     ignore: vendor/
#     enable: all
#     std: c99
#     project: my_project.sln
#     language: c++
#     addon: [cert, misra]
#     bug-hunting: true
#     parallel: false
#     suppressions-list: suppressions.txt

#   # cpplint example. See https://help.sider.review/tools/cplusplus/cpplint
#   cpplint:
#     root_dir: project/
#     target: [src/, lib/]
#     extensions: c,cc
#     headers: hpp,hxx
#     filter: "-whitespace,+whitespace/braces"
#     linelength: 100
#     exclude:
#       - src/*.cpp
#       - lib/*.cpp

#   # detekt example. See https://help.sider.review/tools/kotlin/detekt
#   detekt:
#     root_dir: project/
#     dependencies:
#       - "com.example:detekt-rules:1.0.0"
#     baseline: config/detekt-baseline.xml
#     config:
#       - config/detekt-config.yml
#     config-resource:
#       - /detekt-config-on-classpath.yml
#     disable-default-rulesets: true
#     excludes:
#       - "**/vendor/**"
#     includes:
#       - "**/important/**"
#     target:
#       - src/
#       - test/
#     parallel: true

#   # ESLint example. See https://help.sider.review/tools/javascript/eslint
#   eslint:
#     root_dir: project/
#     dependencies:
#       - my-eslint-plugin@2
#     npm_install: false
#     target:
#       - src/
#       - lib/
#     ext: [.js, .jsx]
#     config: config/.eslintrc.js
#     ignore-path: config/.eslintignore
#     ignore-pattern: "vendor/**"
#     no-ignore: true
#     global: ["require", "exports:true"]
#     quiet: true

#   # Flake8 example. See https://help.sider.review/tools/python/flake8
#   flake8:
#     root_dir: project/
#     dependencies:
#       - flake8-bugbear
#       - flake8-builtins==1.4.1
#       - git+https://github.com/PyCQA/flake8-import-order.git@51e16f33065512afa1a85a20b2c2d3be768f78ea
#       - { name: "flake8-docstrings", version: "==1.6.0" }
#     target: src/
#     config: config/.flake8
#     parallel: false

#   # FxCop example. See https://help.sider.review/tools/csharp/fxcop
#   fxcop:
#     root_dir: project/

#   # GolangCI-Lint example. See https://help.sider.review/tools/go/golangci-lint
#   golangci_lint:
#     root_dir: project/
#     target: "src/..."
#     config: config/.golangci.yml
#     disable:
#       - govet
#       - unused
#     disable-all: true
#     enable:
#       - golint
#       - gosec
#     fast: true
#     no-config: true
#     presets: [bugs, performance]
#     skip-dirs:
#       - src/external_libs/
#     skip-dirs-use-default: false
#     skip-files:
#       - ".*\\.my\\.go$"
#       - lib/bad.go
#     tests: false
#     uniq-by-line: false

#   # Goodcheck example. See https://help.sider.review/tools/others/goodcheck
#   goodcheck:
#     root_dir: project/
#     config: config/goodcheck.yml
#     target:
#       - src/
#       - test/

#   # hadolint example. See https://help.sider.review/tools/dockerfile/hadolint
#   hadolint:
#     root_dir: project/
#     target:
#       - images/**/Dockerfile
#     ignore:
#       - DL3003
#       - SC1010
#     trusted-registry:
#       - docker.io
#       - my-company.com:5000
#     config: config/hadolint.yaml

#   # HAML-Lint example. See https://help.sider.review/tools/ruby/haml-lint
#   haml_lint:
#     root_dir: project/
#     dependencies:
#       - { name: "rubocop", version: "1.0.0" }
#     target: [app/, lib/]
#     include_linter:
#       - EmptyScript
#       - MultilinePipe
#     exclude_linter:
#       - TagName
#     config: config/.haml-lint.yml
#     parallel: false

#   # ktlint example. See https://help.sider.review/tools/kotlin/ktlint
#   ktlint:
#     root_dir: project/
#     dependencies:
#       - "my.company.com:ktlint-rules:1.0.0"
#     target:
#       - "src/**/*.kt"
#       - "!src/**/*Test.kt"
#       - "test/"
#     ruleset:
#       - rules/my-ktlint-rules.jar
#     disabled_rules:
#       - no-wildcard-imports
#       - indent
#     experimental: true

#   # Misspell example. See https://help.sider.review/tools/others/misspell
#   misspell:
#     root_dir: project/
#     target: [src/, test/]
#     exclude: ["**/*.min.*"]
#     locale: UK
#     ignore: [center, behavior]

#   # PHPMD example. See https://help.sider.review/tools/php/phpmd
#   phpmd:
#     root_dir: project/
#     target: [src/, test/]
#     rule: [cleancode, codesize]
#     minimumpriority: 3
#     suffixes: [php, phtml]
#     exclude: [vendor/, "test/*.php"]
#     strict: true
#     custom_rule_path:
#       - Custom_PHPMD_Rule.php
#       - "custom/phpmd/rules/**/*.php"

#   # PMD Java example. See https://help.sider.review/tools/java/pmd
#   pmd_java:
#     root_dir: project/
#     dependencies:
#       - "my.company.com:pmd-ruleset:1.2.3"
#     target: src/
#     rulesets:
#       - category/java/errorprone.xml
#       - your_pmd_custom_rules.xml
#     encoding: ISO-8859-1
#     min_priority: 3

#   # Reek example. See https://help.sider.review/tools/ruby/reek
#   reek:
#     root_dir: project/
#     dependencies:
#       - { name: "reek", version: "6.0.0" }
#     target: [lib/, test/]
#     config: config/reek.yml

#   # remark-lint example. See https://help.sider.review/tools/markdown/remark-lint
#   remark_lint:
#     root_dir: project/
#     dependencies:
#       - my-remark-plugin@2
#     npm_install: false
#     target: [docs/]
#     ext: "md,markdown"
#     rc-path: config/.remarkrc
#     ignore-path: config/.remarkignore
#     use:
#       - remark-lint-file-extension
#       - remark-lint-no-heading-punctuation

#   # RuboCop example. See https://help.sider.review/tools/ruby/rubocop
#   rubocop:
#     root_dir: project/
#     dependencies:
#       - rubocop-rails
#       - { name: "rubocop-rspec", version: "2.1.0" }
#     config: config/.rubocop.yml
#     safe: true

#   # ShellCheck example. See https://help.sider.review/tools/shellscript/shellcheck
#   shellcheck:
#     root_dir: project/
#     target:
#       - "**/*.{sh,bash}"
#       - shebang: true
#     include: [SC2104, SC2105]
#     exclude: [SC1000, SC1118]
#     enable: all
#     shell: bash
#     severity: error
#     norc: true

#   # Slim-Lint example. See https://help.sider.review/tools/ruby/slim-lint
#   slim_lint:
#     root_dir: project/
#     dependencies:
#       - { name: "rubocop", version: "1.0.0" }
#     target: [app/views/]
#     config: config/.slim-lint.yml

#   # stylelint example. See https://help.sider.review/tools/css/stylelint
#   stylelint:
#     root_dir: project/
#     dependencies:
#       - my-stylelint-plugin@2
#     npm_install: false
#     config: config/.stylelintrc.yml
#     syntax: scss
#     ignore-path: config/.stylelintignore
#     ignore-disables: true
#     report-needless-disables: true
#     quiet: true
#     target: ["app/**/*.scss"]

#   # SwiftLint example. See https://help.sider.review/tools/swift/swiftlint
#   swiftlint:
#     root_dir: project/
#     ignore_warnings: true
#     target: [src/]
#     config: config/.swiftlint.yml
#     lenient: true
#     enable-all-rules: true

# Ignore specific files. Example:
# ignore:
#   - "*.pdf"
#   - "*.mp4"
#   - "*.min.*"
#   - "images/**"

# Exclude specific branches. Example:
# branches:
#   exclude:
#     - master
#     - development
#     - /^release-.*$/
